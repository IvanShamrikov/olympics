# Конфетна проблема Степана
#
# Ім’я вхідного файлу: problem.in
# Ім’я вихідного файлу: problem.out
#
# Степан закохався і вирішив привернути уваги дівчини великою коробкою цукерок.
# За порадою друзів він поїхав на саму відому кондитерську фабрику ShenRo і дізнався, що великі коробки цукерок мають трикутну форму.
# Цукерки в цих коробках розташовуються у кілька рядів.
# У першому ряду знаходиться одна цукерка, у другому – дві, у третьому – три цукерки і так далі.
# На фабриці випускаються коробки цукерок з любим числом рядів у межах від 1 до N.
# Степан хоче купити одну із таких коробок.
# Але є одна проблема: його дівчина засмутиться, якщо кількість цукерок у коробці не буде ділитись націло на M,
# тому що у цьому випадку комусь із друзів дівчини дістанеться більше цукерок, чим іншим, або ж якісь цукерки залишаться лишніми.
# Тому Степан вирішив, що число цукерок у коробці має обов’язково ділитись націло на M.
# При виборі подарунка Степан зіткнувся з проблемою придбання відповідної коробки цукерок,
# оскільки можливих варіантів вибору коробки цукерок виявилося надто багато. Не довго думаючи,
# Степан вирішив звернутись за допомогою до учасників олімпіади.
# Вам необхідно по заданих числах N і M знайти число способів вибору коробки цукерок із множини коробок з кількістю рядів від 1 до N.
# Способи вважаються різними, якщо їм відповідають коробки з різною кількістю рядів цукерок.
# Формат вхідних даних: перший рядок вхідного файлу містить два цілих числа N - максимальна кількість рядів цукерок у
# коробці і M – кількість друзів дівчини Степана (1 ≤ N, M ≤ 2*109) відповідно.
# Формат вихідних даних: вихідний файл має містити одне ціле число - кількість різних способів вибору коробки цукерок.
#
# Приклад вхідних та вихідних даних:
# problem.in - 20 10
# problem.out - 4
#
# problem.in - 53 199
# problem.out - 0
#
# problem.in - 5705 145
# problem.out - 157
#
# Оцінювання:  N, M ≤ 1000 – не менше 35 балів, N, M ≤ 105 – не менше 55 балів.

rows = 20
friends = 10
res = 0

for i in range(rows):
    #знаходимо суму ряду арифметичної прогресії (кількість цукерок) для кожного варіанту розміру коробки
    var = (1 + i) * i / 2
    #якщо ділиться без остачі на кількість друзів, то коробка підходить
    if var % friends == 0:
        res += 1

print(res)





